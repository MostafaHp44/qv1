{"ast":null,"code":"var _jsxFileName = \"E:\\\\Qaseribrim\\\\qaseribrim\\\\src\\\\Components\\\\2-AnimationtText\\\\AnimationText.js\",\n  _s = $RefreshSig$();\nimport './Animation.css';\nimport TextTransition, { presets } from 'react-text-transition';\nimport { React, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimationText = () => {\n  _s();\n  const [ArabixText, setArabixText] = useState(0);\n  const [EnglishText, setEnglishText] = useState(0);\n  const TEXTS = ['Forest', 'Building', 'Tree', 'Color'];\n  useEffect(() => {\n    const intervalArabic = setInterval(() => setArabixText(index => index + 1), 3000 // every 3 seconds\n    );\n\n    const intervalEnglish = setInterval();\n    return () => clearTimeout(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainAnimationText\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"WelcomText\",\n      children: /*#__PURE__*/_jsxDEV(TextTransition, {\n        springConfig: presets.stiff,\n        children: TEXTS[index % TEXTS.length]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimationText, \"UHTutfhs124moBXvd5Xc27CNJcs=\");\n_c = AnimationText;\nexport default AnimationText;\nvar _c;\n$RefreshReg$(_c, \"AnimationText\");","map":{"version":3,"names":["TextTransition","presets","React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","AnimationText","_s","ArabixText","setArabixText","EnglishText","setEnglishText","TEXTS","intervalArabic","setInterval","index","intervalEnglish","clearTimeout","intervalId","className","children","springConfig","stiff","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Qaseribrim/qaseribrim/src/Components/2-AnimationtText/AnimationText.js"],"sourcesContent":["import './Animation.css'\r\nimport TextTransition, { presets } from 'react-text-transition';\r\nimport {React,useEffect,useState,useCallback} from 'react'\r\n\r\n\r\nconst AnimationText = () => {\r\n    const [ArabixText, setArabixText] = useState(0);\r\n    const [EnglishText, setEnglishText] = useState(0);\r\n\r\n\r\n    const TEXTS = ['Forest', 'Building', 'Tree', 'Color'];\r\n    useEffect(() => {\r\n        const intervalArabic = setInterval(\r\n          () => setArabixText((index) => index + 1),\r\n          3000, // every 3 seconds\r\n        );\r\n        const intervalEnglish=setInterval()\r\n        return () => clearTimeout(intervalId);\r\n      }, []);\r\n    return (\r\n    <div className=\"MainAnimationText\">\r\n        <span className='WelcomText'>\r\n        <TextTransition springConfig={presets.stiff}>{TEXTS[index % TEXTS.length]}</TextTransition>\r\n\r\n        </span>\r\n    </div>\r\n    );\r\n}\r\n \r\nexport default AnimationText;"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,cAAc,IAAIC,OAAO,QAAQ,uBAAuB;AAC/D,SAAQC,KAAK,EAACC,SAAS,EAACC,QAAQ,EAACC,WAAW,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG1D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAGjD,MAAMU,KAAK,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,CAAC;EACrDX,SAAS,CAAC,MAAM;IACZ,MAAMY,cAAc,GAAGC,WAAW,CAChC,MAAML,aAAa,CAAEM,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC,EACzC,IAAI,CAAE;IACR,CAAC;;IACD,MAAMC,eAAe,GAACF,WAAW,CAAC,CAAC;IACnC,OAAO,MAAMG,YAAY,CAACC,UAAU,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EACR,oBACAb,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9Bf,OAAA;MAAMc,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5Bf,OAAA,CAACP,cAAc;QAACuB,YAAY,EAAEtB,OAAO,CAACuB,KAAM;QAAAF,QAAA,EAAER,KAAK,CAACG,KAAK,GAAGH,KAAK,CAACW,MAAM;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAApB,EAAA,CAtBKD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}